
Prerequisite
--------------------------------
Python==3.8.10
mysql-connector-python==8.0.31
typing-extensions==3.7.4.3 



Q1: Created NVD.py file, with a function named extract() that takes a file,
    and if it is a JSON file then will load, extract the file, and return the extracted data. 
    
    
Q-2: Created nvd_extract function inside the nvd_extract.py file that takes the extracted data structure from the NVD extract() and prints the data.


Q-3: Downloaded NIST feed for the years 2017 to 2020 and ran the nvd_extract.py created for Q-2.


Q-4: Modified NVD.py and nvd_extract.py files, so that they can print an appropriate message if the input file is invalid or empty.


Q-5: Modified nvd_extract function of the nvd_extract.py file, so that it can extract only the intended information and contains a query command to create a table.


Q-6: A new function created in NVD named save2db() that accepts the output of NVD nvd_extract_only_intended(), and the connection information
     to a database, connects to the database specified, makes a new database table as asked, and inserts records into the table.
          
Q-7: Created a new script called vuln2db.py that accepts any number of NVD JSON files. For each given JSON file, it
     call NVD extract(), nvd_extract_only_intended() and the NVD save2db() functions.
     
     
BQ-1: Modified the NVD nvd_extract_only_intended() and save2db() functions, so that it can save the intended extracted data including the vendor data information
      into the specified table.
      
      
      
      

Note: Here, I implemented the nvd_extract_only_intended() helper function so that we can check whether the input JSON file is the expected JSON file or not.

Note: I am not sure what is the benefit of the nvd_extract.py file. As NVD extract() only returns the main data structure (not the intended one) and we created
      the nvd_extract function inside the nvd_extract.py file to extract only intend information but from the vuln2db.py file we are calling (based on the question) 
      the NVD extract() function. If we use the nvd_extract() function from the nvd_extract.py file we might reduce some complexity of the code (and I don't need to create 
      the NVD nvd_extract_only_intended() function).
